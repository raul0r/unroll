// extension/package.json
{
    "name": "threadkeeper-extension",
    "version": "1.0.0",
    "description": "Chrome extension for saving and organizing Twitter/X threads",
    "scripts": {
      "build": "webpack --mode production",
      "dev": "webpack --mode development --watch",
      "test": "jest",
      "lint": "eslint .",
      "package": "npm run build && zip -r threadkeeper.zip dist/"
    },
    "devDependencies": {
      "@types/chrome": "^0.0.251",
      "copy-webpack-plugin": "^11.0.0",
      "eslint": "^8.50.0",
      "jest": "^29.7.0",
      "webpack": "^5.88.2",
      "webpack-cli": "^5.1.4"
    }
  }
  
  // backend/package.json
  {
    "name": "threadkeeper-backend",
    "version": "1.0.0",
    "description": "Backend API for ThreadKeeper",
    "main": "src/server.js",
    "scripts": {
      "start": "node src/server.js",
      "dev": "nodemon src/server.js",
      "test": "jest --coverage",
      "lint": "eslint src/",
      "migrate": "node scripts/migrate.js",
      "seed": "node scripts/seed.js"
    },
    "dependencies": {
      "express": "^4.18.2",
      "cors": "^2.8.5",
      "helmet": "^7.0.0",
      "compression": "^1.7.4",
      "express-rate-limit": "^6.10.0",
      "morgan": "^1.10.0",
      "dotenv": "^16.3.1",
      "pg": "^8.11.3",
      "redis": "^4.6.10",
      "jsonwebtoken": "^9.0.2",
      "bcryptjs": "^2.4.3",
      "stripe": "^13.9.0",
      "joi": "^17.10.2",
      "winston": "^3.10.0",
      "nodemailer": "^6.9.5",
      "uuid": "^9.0.1",
      "axios": "^1.5.1",
      "bull": "^4.11.3"
    },
    "devDependencies": {
      "nodemon": "^3.0.1",
      "jest": "^29.7.0",
      "supertest": "^6.3.3",
      "eslint": "^8.50.0",
      "@types/node": "^20.8.0"
    },
    "engines": {
      "node": ">=18.0.0"
    }
  }
  
  // backend/docker-compose.yml
  version: '3.8'
  
  services:
    postgres:
      image: postgres:15-alpine
      environment:
        POSTGRES_DB: threadkeeper
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: ${DB_PASSWORD}
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
      networks:
        - threadkeeper-network
    
    redis:
      image: redis:7-alpine
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
      networks:
        - threadkeeper-network
    
    app:
      build: .
      ports:
        - "3000:3000"
      environment:
        NODE_ENV: ${NODE_ENV}
        DB_HOST: postgres
        DB_PORT: 5432
        DB_NAME: threadkeeper
        DB_USER: postgres
        DB_PASSWORD: ${DB_PASSWORD}
        REDIS_URL: redis://redis:6379
        JWT_SECRET: ${JWT_SECRET}
        STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
        STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      depends_on:
        - postgres
        - redis
      networks:
        - threadkeeper-network
      volumes:
        - ./src:/app/src
        - ./public:/app/public
      command: npm run dev
  
  volumes:
    postgres_data:
    redis_data:
  
  networks:
    threadkeeper-network:
      driver: bridge
  
  // backend/Dockerfile
  FROM node:18-alpine
  
  WORKDIR /app
  
  # Copy package files
  COPY package*.json ./
  
  # Install dependencies
  RUN npm ci --only=production
  
  # Copy application code
  COPY . .
  
  # Create non-root user
  RUN addgroup -g 1001 -S nodejs && \
      adduser -S nodejs -u 1001
  
  # Change ownership
  RUN chown -R nodejs:nodejs /app
  
  USER nodejs
  
  EXPOSE 3000
  
  CMD ["node", "src/server.js"]
  
  // backend/.env.example
  # Server Configuration
  NODE_ENV=development
  PORT=3000
  
  # Database Configuration
  DB_HOST=localhost
  DB_PORT=5432
  DB_NAME=threadkeeper
  DB_USER=postgres
  DB_PASSWORD=your_secure_password
  
  # Redis Configuration
  REDIS_URL=redis://localhost:6379
  
  # JWT Configuration
  JWT_SECRET=your_jwt_secret_key_here
  JWT_EXPIRES_IN=7d
  JWT_REFRESH_EXPIRES_IN=30d
  
  # Stripe Configuration
  STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
  STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
  STRIPE_PRICE_ID_BASIC=price_basic_monthly
  STRIPE_PRICE_ID_PRO=price_pro_monthly
  STRIPE_PRICE_ID_ENTERPRISE=price_enterprise_monthly
  
  # Email Configuration
  SMTP_HOST=smtp.gmail.com
  SMTP_PORT=587
  SMTP_USER=your_email@gmail.com
  SMTP_PASS=your_app_password
  EMAIL_FROM=ThreadKeeper <noreply@threadkeeper.app>
  
  # Frontend URLs
  FRONTEND_URL=http://localhost:3000
  EXTENSION_ID=your_chrome_extension_id
  
  # API Keys
  OPENAI_API_KEY=sk_your_openai_key
  TWITTER_API_KEY=your_twitter_api_key
  TWITTER_API_SECRET=your_twitter_api_secret
  
  # Sentry (Error Tracking)
  SENTRY_DSN=your_sentry_dsn
  
  # Analytics
  GOOGLE_ANALYTICS_ID=G-YOUR_ID
  MIXPANEL_TOKEN=your_mixpanel_token